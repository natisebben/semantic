Token Type:              Token:                   Line:     Start Column:       Final Column:       
INT                      int                      1         0                   3                   
FLOAT                    float                    2         0                   5                   
CHAR                     char                     2         6                   10                  
DOUBLE                   double                   2         11                  17                  
STRUCT                   struct                   3         0                   6                   
INT                      int                      4         0                   3                   
IDENTIFIER               j                        4         4                   5                   
COMMA                    ,                        4         5                   6                   
PRODUCT                  *                        4         6                   7                   
PARENTHESISOPEN          (                        4         7                   8                   
IDENTIFIER               a                        4         8                   9                   
BRACKETOPEN              [                        4         9                   10                  
INTEGERCONSTANT          3                        4         10                  11                  
BRACKETCLOSE             ]                        4         11                  12                  
PARENTHESISCLOSE         )                        4         12                  13                  
SEMICOLLON               ;                        4         13                  14                  
PLUS                     +                        5         0                   1                   
MINUS                    -                        5         2                   3                   
PRODUCT                  *                        5         4                   5                   
DIVISION                 /                        5         6                   7                   
MODULE                   %                        5         8                   9                   
AND                      &                        6         0                   1                   
OR                       |                        6         2                   3                   
XOR                      ^                        6         4                   5                   
SHIFTRIGHT               >>                       6         6                   8                   
SHIFTLEFT                <<                       6         9                   11                  
NEGATE                   ~                        6         12                  13                  
GREATER                  >                        7         0                   1                   
LESS                     <                        7         2                   3                   
GREATEROREQUAL           >=                       7         4                   6                   
LESSOREQUAL              <=                       7         7                   9                   
EQUALS                   ==                       7         10                  12                  
NOTEQUALS                !=                       7         13                  15                  
LOGICALAND               &&                       8         0                   2                   
LOGICALOR                ||                       8         3                   5                   
LOGICALNOT               !                        8         6                   7                   
INTEGERCONSTANT          10                       9         0                   2                   
IDENTIFIER               ident                    10        0                   5                   
PARENTHESISOPEN          (                        10        6                   7                   
INTEGERCONSTANT          3                        10        7                   8                   
COMMA                    ,                        10        8                   9                   
INTEGERCONSTANT          4                        10        9                   10                  
PARENTHESISCLOSE         )                        10        10                  11                  
IDENTIFIER               x                        11        0                   1                   
DOT                      .                        11        1                   2                   
IDENTIFIER               y                        11        2                   3                   
STRUCTACCESSOR           ->                       11        3                   5                   
IDENTIFIER               z                        11        5                   6                   
WHILE                    while                    12        0                   5                   
PARENTHESISOPEN          (                        12        6                   7                   
IDENTIFIER               a                        12        7                   8                   
PARENTHESISCLOSE         )                        12        8                   9                   
FOR                      for                      12        10                  13                  
PARENTHESISOPEN          (                        12        14                  15                  
IDENTIFIER               a                        12        15                  16                  
SEMICOLLON               ;                        12        16                  17                  
IDENTIFIER               a                        12        17                  18                  
SEMICOLLON               ;                        12        18                  19                  
IDENTIFIER               a                        12        19                  20                  
PARENTHESISCLOSE         )                        12        20                  21                  
IDENTIFIER               do                       13        0                   2                   
BRACEOPEN                {                        13        3                   4                   
IDENTIFIER               a                        13        4                   5                   
SEMICOLLON               ;                        13        5                   6                   
BRACECLOSE               }                        13        6                   7                   
WHILE                    while                    13        8                   13                  
PARENTHESISOPEN          (                        13        14                  15                  
IDENTIFIER               a                        13        15                  16                  
PARENTHESISCLOSE         )                        13        16                  17                  
SEMICOLLON               ;                        13        17                  18                  
IF                       if                       14        0                   2                   
PARENTHESISOPEN          (                        14        3                   4                   
IDENTIFIER               a                        14        4                   5                   
PARENTHESISCLOSE         )                        14        5                   6                   
IDENTIFIER               a                        14        7                   8                   
SEMICOLLON               ;                        14        8                   9                   
ELSE                     else                     14        10                  14                  
IDENTIFIER               a                        14        15                  16                  
SEMICOLLON               ;                        14        16                  17                  
SWITCH                   switch                   15        0                   6                   
PARENTHESISOPEN          (                        15        6                   7                   
IDENTIFIER               a                        15        7                   8                   
PARENTHESISCLOSE         )                        15        8                   9                   
BRACEOPEN                {                        15        9                   10                  
CASE                     case                     15        10                  14                  
INTEGERCONSTANT          3                        15        15                  16                  
COLLON                   :                        15        16                  17                  
IDENTIFIER               a                        15        17                  18                  
SEMICOLLON               ;                        15        18                  19                  
DEFAULT                  default                  15        19                  26                  
COLLON                   :                        15        26                  27                  
IDENTIFIER               a                        15        27                  28                  
SEMICOLLON               ;                        15        28                  29                  
BRACECLOSE               }                        15        29                  30                  
EOF                                               16        0                   0                   
